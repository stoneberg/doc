
---Normalizing to Third Normal Form---

USE test
GO

CREATE TABLE GOLF_PLAYERS 
(
	PLAYER_ID INT,
	PLAYER_NAME VARCHAR(100) NOT NULL,
  DATE_OF_BIRTH DATE NOT NULL,
CONSTRAINT GOLF_PLAYERS_PLAYER_ID_PK PRIMARY KEY (PLAYER_ID)
);	
	
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (1, 'Eric Nobel', '1989-11-24');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (2, 'Jack Brown', '1982-05-22');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (3, 'Eric Nobel Jr', '1990-11-11');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (4, 'Anna Adams', '1974-07-18');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (5, 'Craig McCain', '1994-04-20');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (6, 'Yulia Jacobs', '1974-07-18');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (7, 'Wendy Thomas', '1995-01-25');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (8, 'Uma Yates', '1991-09-16');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (9, 'Hannah Harrison', '1994-09-08');
INSERT INTO GOLF_PLAYERS (PLAYER_ID, PLAYER_NAME, DATE_OF_BIRTH) VALUES (10, 'Jim O''Brien', '1979-08-15');

SELECT *
FROM GOLF_PLAYERS;


CREATE TABLE GOLF_TOURNAMENTS 
(
TOURNAMENT_ID SMALLINT,
TOURNAMENT_NAME VARCHAR(50),
CONSTRAINT GOLF_TOURNAMENTS_PK PRIMARY KEY (TOURNAMENT_ID),
CONSTRAINT GOLF_TOURNAMENTS_UK UNIQUE (TOURNAMENT_NAME)
);

INSERT INTO GOLF_TOURNAMENTS (TOURNAMENT_ID, TOURNAMENT_NAME) VALUES (101, 'Oakland Classic');
INSERT INTO GOLF_TOURNAMENTS (TOURNAMENT_ID, TOURNAMENT_NAME) VALUES (102, 'Pacific Open');
INSERT INTO GOLF_TOURNAMENTS (TOURNAMENT_ID, TOURNAMENT_NAME) VALUES (103, 'Millbrook Open');

CREATE TABLE GOLF_TOUR_WINNERS (
	TOURNAMENT_ID SMALLINT,
	TOURNAMENT_YEAR SMALLINT,
	PLAYER_ID INT NOT NULL,
	PRIZE_VALUE DECIMAL(12,2) NOT NULL,
	DATE_OF_BIRTH DATE NOT NULL,
CONSTRAINT GOLF_TOUR_WINNERS_CPK PRIMARY KEY (TOURNAMENT_ID, TOURNAMENT_YEAR),
CONSTRAINT GOLF_TOUR_WINNERS_PLAYER_ID_FK FOREIGN KEY (PLAYER_ID) REFERENCES GOLF_PLAYERS (PLAYER_ID),
CONSTRAINT GOLF_TOUR_WINNERS_TOUR_ID_FK FOREIGN KEY (TOURNAMENT_ID) REFERENCES GOLF_TOURNAMENTS (TOURNAMENT_ID));

INSERT INTO GOLF_TOUR_WINNERS (TOURNAMENT_ID, TOURNAMENT_YEAR, PLAYER_ID, PRIZE_VALUE, DATE_OF_BIRTH) VALUES (102, 2019, 4, 300000, '1974-07-18');
INSERT INTO GOLF_TOUR_WINNERS (TOURNAMENT_ID, TOURNAMENT_YEAR, PLAYER_ID, PRIZE_VALUE, DATE_OF_BIRTH) VALUES (102, 2018, 6, 350000, '1974-07-18');
INSERT INTO GOLF_TOUR_WINNERS (TOURNAMENT_ID, TOURNAMENT_YEAR, PLAYER_ID, PRIZE_VALUE, DATE_OF_BIRTH) VALUES (103, 2017, 2, 350000, '1982-05-22');
INSERT INTO GOLF_TOUR_WINNERS (TOURNAMENT_ID, TOURNAMENT_YEAR, PLAYER_ID, PRIZE_VALUE, DATE_OF_BIRTH) VALUES (101, 2017, 5, 425000, '1994-04-20');
INSERT INTO GOLF_TOUR_WINNERS (TOURNAMENT_ID, TOURNAMENT_YEAR, PLAYER_ID, PRIZE_VALUE, DATE_OF_BIRTH) VALUES (101, 2016, 5, 450000, '1994-04-20');

SELECT *
FROM GOLF_TOUR_WINNERS;

/*
The candidate key in this table is the combination of TOURNAMENT_ID and TOURNAMENT_YEAR.
All the non-key attributes are functionally dependent on the whole of the candidate key. 
Therefore this table is in second normal form.

However DATE_OF_BIRTH is functionally dependent on PLAYER_ID. 
Each winner's PLAYER_ID number can be used to uniquely identify their Date of Birth.
Therefore we say PLAYER_ID functionally determines DATE_OF_BIRTH:
PLAYER_ID -> DATE_OF_BIRTH

The right-hand side of this functional dependency is a non-key attribute therefore 
the attribute on the left-hand side needs to be a super key i.e. have the property 
of uniqueness in order to be in third normal form. Since this is not the case, this table
is not in third normal form.

To normalize the structure, we need to remove the non-key attribute(s) that are dependent 
on an attribute(s) that are not a super key. Then we need to create another table for this 
attribute along with the attribute on which it depends.

However, in this case the birth date information is already captured in the GOLF_PLAYERS parent table
in the DATE_OF_BIRTH attribute. Therefore, we just need to remove the DATE_OF_BIRTH attribute from
the table:
*/

ALTER TABLE GOLF_TOUR_WINNERS
DROP COLUMN DATE_OF_BIRTH;




--Joining the tables together to get all winner information:
SELECT
	T.TOURNAMENT_ID,
	TW.TOURNAMENT_YEAR,
	TW.PLAYER_ID,
	P.PLAYER_NAME AS WINNER_NAME,
	TW.PRIZE_VALUE,
	P.DATE_OF_BIRTH
FROM GOLF_TOUR_WINNERS TW 
JOIN GOLF_PLAYERS P
ON TW.PLAYER_ID = P.PLAYER_ID
JOIN GOLF_TOURNAMENTS T
ON TW.TOURNAMENT_ID = T.TOURNAMENT_ID;
	



DROP TABLE GOLF_TOUR_WINNERS;
DROP TABLE GOLF_PLAYERS;
DROP TABLE GOLF_TOURNAMENTS;

































	